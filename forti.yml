- hosts: fortigates
  connection: httpapi

  # when using the colltion
  #collections:
  #- fortinet.fortios
  gather_facts: false
  vars:
    vdom: "root"
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    #ansible_httpapi_port: 8443
    ssl_verify: "False"

    firewall_ip: "192.168.1.1"
    username: "admin"
    password: ""


  tasks:
  
  
  # - name: Configure MAC address tables.
  #   fortios_system_mac_address_table:
  #     host:  "{{ host }}"
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     vdom:  "{{ vdom }}"
  #     https: "False"
  #     state: "present"
  #     system_mac_address_table:
  #       interface: "<your_own_value> (source system.interface.name)"
  #       mac: "<your_own_value>"
  #       reply_substitute: "<your_own_value>"

  - name: Configure DHCP servers.
    fortios_system_dhcp_server:
      vdom:  "{{ vdom }}"
      state: "present"
      system_dhcp_server:
        id: 1
        interface: "lan"
        reserved_address:
         -
            action: "reserved"
            id: 1
            ip: "192.168.1.50"
            mac: "11:22:33:44:f4:75"
            description: "Phone"
         -
            action: "reserved"
            id: 2
            ip: "192.168.1.5"
            mac: "11:22:33:44:3c:43"
            description: "example2"
 
    tags: [never, dhcp]

  - name: Create IPv4 addresse 
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "example-60"
        subnet: "192.168.1.60/32"
    tags: [never, address]

  - name: Create IPv4 addresse for google
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "google-dns"
        subnet: "8.8.8.8/32"
    tags: [never, address]

  # working Example
  - name: Create Block Policy 
    fortios_firewall_policy:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_policy:
        #state: "present"
        policyid: "60"
        name: "test-block"
        action: "deny"
        srcintf:
          - name: any
        dstintf:
          - name: any
        srcaddr: 
          - name: 'example-60'
        dstaddr:
          - name: 'all'
        service: 
          - name: 'ALL'
        send_deny_packet: "enable"
        schedule: "always"
        #nat: "disable"
        logtraffic: "all"
        logtraffic_start: "enable"

    tags: [never, policy]

  - name: Create DNS Policy 
    fortios_firewall_policy:
      vdom:  "{{ vdom }}"
      https: "False"
      state: "present"
      firewall_policy:
        #state: "present"
        status: "disable"
        policyid: "61"
        name: "example-60-allow"
        action: "accept"
        srcintf:
          - name: lan
        dstintf:
          - name: wan
        srcaddr: 
          - name: 'example-60'
        dstaddr:
          - name: 'google-dns'
        service: 
          - name: 'DNS'
        #send_deny_packet: "enable"
        schedule: "always"
        nat: "enable"
        logtraffic: "all"
        logtraffic_start: "enable"

    tags: [never, policy]

  # # working Example
  # - name: Create Policy
  #   fortios_firewall_policy:
  #     host:  "{{ host }}"
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     vdom:  "{{ vdom }}"
  #     https: "False"
  #     state: "present"
  #     firewall_policy:
  #       state: "present"
  #       policyid: "2002"
  #       name: "Policy_2002"
  #       action: "deny"
  #       srcintf:
  #         - name: any
  #       dstintf:
  #         - name: any
  #       srcaddr: 
  #         - name: 'all'
  #       dstaddr:
  #         - name: 'all'
  #       service: 
  #         - name: 'HTTP'
  #         - name: 'HTTPS'
  #       schedule: "always"
  #       nat: "disable"
  #       logtraffic: "all"
  #       logtraffic_start: "disable"
  #       uuid: "20190306-2321-0001-2002-e5167ed833c7"

  - name: Create IPv4 addresse for net
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "net_192.168.1.0-24"
        subnet: "192.168.1.0/24"
    tags: [never, address]

  

  - name: Configure SSL VPN portal full-access-2
    fortios_vpn_ssl_web_portal:
      vdom:  "{{ vdom }}"
      state: "present"
      vpn_ssl_web_portal:
        name: 'full-access-2'
        tunnel_mode: "enable"
        ipv6_tunnel_mode: "enable"
        web_mode: "enable"
        ip_pools:
          -
            name: 'SSLVPN_TUNNEL_ADDR1'
        ipv6_pools:
          -
            name: 'SSLVPN_TUNNEL_IPv6_ADDR1'
        #forticlient_download_method: "ssl-vpn"
        forticlient_download_method: "direct"
        save_password: "enable"
        auto_connect: "enable"
        keep_alive: "enable"
        
    tags: [never, vpn]

  - name: Configure SSL VPN firewall policy
    fortios_firewall_policy:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_policy:
        status: "enable"
        policyid: "100"
        name: "VPN-to-NET"
        action: "accept"
        srcintf:
          - name: ssl.root
        dstintf:
          - name: lan
        srcaddr: 
          - name: 'SSLVPN_TUNNEL_ADDR1'
        dstaddr:
          - name: 'net_192.168.1.0-24'
        service: 
          - name: 'ALL'
        #send_deny_packet: "enable"
        schedule: "always"
        #nat: "enable"
        logtraffic: "all"
        logtraffic_start: "enable"
        #users:
        groups:
          - name: 'vpn-user-group'
          - name: 'myuser'

    tags: [never, vpn]





  - name: Configure DHCP server for wan
    fortios_system_dhcp_server:
      vdom:  "{{ vdom }}"
      state: "present"
      system_dhcp_server:
        #dns_server1: "8.8.8.8"
        id:  "20"
        interface: "wan2"
        ip_mode: "range"
        ip_range:
          -
            id:  "1"
            start_ip: "1.2.3.5"
            end_ip: "1.2.3.100"
            
        #server_type: "regular"
        #status: "disable"
        netmask: "255.255.255.0"
    tags: [never]

  - name: Configure DHCP server for lan
    fortios_system_dhcp_server:
      vdom:  "{{ vdom }}"
      state: "present"
      system_dhcp_server:        
        id:  "1"
        interface: "lan"
        default_gateway: "192.168.1.1"
        netmask: "255.255.255.0"
        ip_mode: "range"
        ip_range:
          -
            id:  "1"
            start_ip: "192.168.1.10"
            end_ip: "192.168.1.200"
            
        #server_type: "regular"
        status: "enable"
        dns_service: specify
        dns_server1: "192.168.1.5"
        reserved_address:
          -
            action: "reserved"
            id: 1
            ip: "192.168.1.22"
            mac: "00:00:00:00:00:3c"
            description: "3c host"
          -
            action: "reserved"
            id: 2
            ip: "192.168.1.23"
            mac: "00:00:00:00:00:23"
            description: "3c host 2"

    tags: [never, dhcplan]



  - name: Delete DHCP server 20
    fortios_system_dhcp_server:
      vdom:  "{{ vdom }}"
      state: "absent"
      system_dhcp_server:
        #dns_server1: "8.8.8.8"
        id:  "20"
 
    tags: [never, dhcp20]

  - name: Configure general log settings.
    fortios_log_setting:
      vdom:  "{{ vdom }}"
      log_setting:
        local_in_allow: "enable"
        local_in_deny_broadcast: "enable"
        local_in_deny_unicast: "enable"
        local_out: "enable"
    tags: [never, global]

  - name: Configure global attributes - hostname
    fortios_system_global:
      vdom:  "{{ vdom }}"
      system_global:
        hostname: "{{ inventory_hostname }}"
    tags: [never, hostname]

  - name: Configure global attributes - banner settings
    fortios_system_global:
      vdom:  "{{ vdom }}"
      system_global:
        post_login_banner: disable
        pre_login_banner: disable
    tags: [never, hostname, global]

  - name: Configure admin https port to 8443
    fortios_system_global:
      vdom:  "{{ vdom }}"
      system_global:
        admin_sport: 8443
    tags: [never, adminports, global]

